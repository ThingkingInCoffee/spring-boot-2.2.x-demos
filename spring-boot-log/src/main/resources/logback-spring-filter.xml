<?xml version="1.0" encoding="UTF-8"?>
<!--用于测试 encoder 和 layout-->
<configuration>
    <!-- 日志级别过滤-->
    <appender name="CONSOLE_LEVEL" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- LevelFilter 中的属性，如果自定义filter，也可以添加对应属性-->
            <level>DEBUG</level>
            <!-- onMatch 和 onMismatch 属性继承自 AbstractMatcherFilter-->
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>
                %-4relative [%thread] %-5level %logger{30} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- 日志级别阈值过滤-->
    <appender name="CONSOLE_THRESHOLD" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 拒绝低于INFO 级别的日志 deny all events with a level below INFO, that is TRACE and DEBUG -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>
                %-4relative [%thread] %-5level %logger{30} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- GEventEvaluator测试，需要groovy环境，需要引入maven依赖-->
    <appender name="G_EVENT_STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.GEventEvaluator">
                <expression>
                    e.level.toInt() >= WARN.toInt() &amp;&amp;  <!-- 在 XML 中替代 && -->
                    !(e.mdc?.get("req.userAgent") =~ /Googlebot|msnbot|Yahoo/ )
                </expression>
            </evaluator>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>NEUTRAL</OnMatch>
        </filter>
        <encoder>
            <pattern>
                %-4relative [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="JANINO_STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator> <!-- 默认类型 defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
                <expression>return message.contains("janino");</expression>
                <!-- expression 中也可以是Java代码块 -->
                <expression>
                    if(logger.startsWith("org.apache.http"))
                    return true;
                    if(mdc == null || mdc.get("entity") == null)
                    return false;
                    String payee = (String) mdc.get("entity");
                    if(logger.equals("org.apache.http.wire") &amp;&amp; payee.contains("someSpecialValue") &amp;&amp; !message.contains("someSecret")) {
                        return true;
                    }
                    return false;
                </expression>
            </evaluator>
            <OnMismatch>NEUTRAL</OnMismatch>
            <OnMatch>DENY</OnMatch>
        </filter>
        <encoder>
            <pattern>
                %-4relative [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- ROOT 中的日志级别影响filter中的过滤，他控制了日志级别能否出现在filter中，此处为了测试，可以将级别调整为DEBUG-->
    <root level="DEBUG">
        <appender-ref ref="JANINO_STDOUT"/>
    </root>
</configuration>